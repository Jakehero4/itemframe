/* Reset some default styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Basic page styling */
body {
    user-select: none;
    font-family: "Dongle", serif;
    font-weight: 700;
    font-style: normal;
    background-color: #f4f4f9;
    color: #333;
    line-height: 1.2;
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Title styling */
h1 {
    line-height: 1;
    font-size: 10rem;
    text-align: center;
    margin-bottom: -20px;
}

h3 {

    font-size: 8rem;
    margin-top: -40px;
    margin-bottom: -25px;
    text-decoration: underline;

}

/* Category section styling */
.category {
    text-align: center;
    font-size: 4rem;
    margin-top: 30px;
}

/* Category header styling */
.category h2 {
    font-size: 6rem;
    background-color: #282828;
    color: white;
    padding: 20px 20px; /* Adjusted padding to move text down slightly */
    border-radius: 30px;
    width: fit-content; /* Make the width fit the content */
    margin: 0 auto; /* Center the header */
    line-height: 0.5; /* Adjust line-height to control text vertical alignment */
}

/* Style for the variety container */
.item-list {
    display: flex; /* Arrange varieties horizontally */
    flex-wrap: wrap; /* Wrap to next line if space is tight */
    margin-top: 30px;
    justify-content: center;
}

/* Item images inside buttons */
.item-button img {
    width: 128px;  /* Scale up the image to 128px */
    height: auto; /* Scale up the image to 128px */
    image-rendering: pixelated; /* Keeps the pixelated effect */
    border-radius: 0; /* Remove any border radius to maintain sharp edges */
    transition: transform 0.3s ease;
    pointer-events: none;
}

/* Smooth hover effect */
.item-button:hover {
    transition: transform 0.3s ease; /* Smooth scaling transition */
    transform: scale(1.2); /* Slightly enlarge on hover */
}

/* Smooth unhover effect */
.item-button:not(:hover) {
    transition: transform 0.3s ease; /* Smooth scaling transition */
    transform: scale(1); /* Reset to normal size on unhover */
}

/* Style for the variety container */
.block-list {
    display: flex; /* Arrange varieties horizontally */
    flex-wrap: wrap; /* Wrap to next line if space is tight */
    margin-top: 30px;
    justify-content: center;
}

/* Item images inside buttons */
.block-button img {
    width: 128px;  /* Scale up the image to 128px */
    height: auto; /* Scale up the image to 128px */
    image-rendering: pixelated; /* Keeps the pixelated effect */
    border-radius: 0; /* Remove any border radius to maintain sharp edges */
    transition: transform 0.3s ease;
    pointer-events: none;
}

/* Smooth hover effect */
.block-button:hover {
    transition: transform 0.3s ease; /* Smooth scaling transition */
    transform: scale(1.2); /* Slightly enlarge on hover */
}

/* Smooth unhover effect */
.block-button:not(:hover) {
    transition: transform 0.3s ease; /* Smooth scaling transition */
    transform: scale(1); /* Reset to normal size on unhover */
}

#led-display {
    image-rendering: pixelated;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 50px; /* Adjust margin-top to control space from h1 */
    box-shadow: 0px 0px 50px rgb(41, 41, 41);
    background-image: url('background.png');
    background-size: 100%; /* Slightly upscaled background */
    background-repeat: no-repeat;
    background-position: center;
    width: 300px; /* Adjust width to match the upscaled background */
    height: 300px; /* Adjust height to match the upscaled background */
}

#led-image {
    image-rendering: pixelated;
    width: 88%;
    height: auto; /* Allow height to adjust based on the width */
    cursor: pointer;
    object-fit: contain;
    transform: scale(0); /* Start with the image scaled down */
    opacity: 1; /* Start with opacity 0 */
    transition: transform 0.5s ease, opacity 0.5s ease; /* Smooth transition for both scaling and opacity */
}

#led-image.selected {
    image-rendering: pixelated;
    width: 88%;
    height: auto; /* Allow height to adjust based on the width */
    cursor: pointer;
    object-fit: contain;
    transform: scale(1);  /*Scale to full size when selected */
    opacity: 1;  /*Make the image fully visible */
    transition: transform 0.5s cubic-bezier(0.175, 1, 0.32, 2), opacity 0.5s cubic-bezier(0.175, 0.885, 0.32, 2); /* Smooth transition for both scaling and opacity */
    animation: appear 0.5s ease forwards;
}

.item-button {
    will-change: transform;
    image-rendering: pixelated;
    display: inline-block;
    padding: 5px;
    margin: 0px;
    background-color: transparent;
    border: none;
    cursor: pointer;
    outline: none;
    transition: border 0.3s ease;
    position: relative;
}

/* Checkmark styling */
.item-button::after {
    content: "";
    will-change: transform;
    position: absolute;
    bottom: 0px; /* Position below the image */
    left: 50%; /* Center horizontally */
    width: 32px;
    height: 32px;
    background-image: url('checkmark.png'); /* Use your checkmark PNG */
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 1; /* Initially visible */
    transform: translateX(-50%) scale(1); /* Start with the checkmark scaled up */
    transition: transform 0.3s ease, opacity 0.3s ease; /* Smooth scaling transition */
}

/* Hide checkmark when deselected */
.item-button:not(.selected)::after {
    will-change: transform;
    opacity: 0; /* Hide the checkmark */
    transform: translateX(-50%) scale(0); /* Scale the checkmark down */
}

.block-button {
    image-rendering: pixelated;
    display: inline-block;
    padding: 5px;
    margin: 0px;
    background-color: transparent;
    border: none;
    cursor: pointer;
    outline: none;
    transition: border 0.3s ease;
    position: relative;
}

/* Checkmark styling */
.block-button::after {
    content: "";
    position: absolute;
    bottom: 0px; /* Position below the image */
    left: 50%; /* Center horizontally */
    width: 32px;
    height: 32px;
    background-image: url('checkmark.png'); /* Use your checkmark PNG */
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 1; /* Initially visible */
    transform: translateX(-50%) scale(1); /* Start with the checkmark scaled up */
    transition: transform 0.3s ease, opacity 0.3s ease; /* Smooth scaling transition */
}

/* Hide checkmark when deselected */
.block-button:not(.selected)::after {
    opacity: 0; /* Hide the checkmark */
    transform: translateX(-50%) scale(0); /* Scale the checkmark down */
}

/* Add new class to item-button when led-image is clicked */
.led-image-clicked .item-button {
    opacity: 0.5; /* Dim the item-button */
    will-change: transform;
}

.led-image-clicked .item-button::after {
    opacity: 0; /* Hide the checkmark */
    transform: translateX(-50%) scale(0); /* Scale the checkmark down */
    will-change: transform;
}

/* Add new class to item-button when led-image is clicked */
.led-image-clicked .block-button {
    opacity: 0.5; /* Dim the item-button */
}

.led-image-clicked .block-button::after {
    opacity: 0; /* Hide the checkmark */
    transform: translateX(-50%) scale(0); /* Scale the checkmark down */
}

#scroll-to-top {
    position: fixed;
    top: 20px;
    left: 20px;
    z-index: 1000; /* Ensure it stays above other elements */
    width: 50px;
    height: 50px;
    background-color: #333; /* Button background color */
    color: white; /* Button text color */
    border: none;
    border-radius: 50%;
    font-size: 24px;
    cursor: pointer;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    opacity: 0.7; /* Slightly transparent */
    transition: opacity 0.3s ease, transform 0.3s ease;
}

#scroll-to-top:hover {
    opacity: 1; /* Fully opaque on hover */
    transform: scale(1.2); /* Slight zoom on hover */
}

#scroll-to-top:active {
    transform: scale(1); /* Reset zoom on click */
}